משימות

1. כתבו פונקציה המקבלת שני מספרים ומחזירה TRUE אם שניהם זוגיים, אחרת FALSE
2. כתבו את אותה פונקציה של סעיף 1 בשורה אחת בלבד!
3. כתבו פונקציה המקבלת נתיב לקובץ כלשהו ומחזירה את התוכן שלו. אין להשתמש בCALL-BACKS ! דגש: אסור להשתמש בפעולה readFileSync
4. מימוש הפונקציה מסעיף 3 ללא המילה AWAIT! 
5. מימוש הפונקציה מסעיף 3 הפעם בלי להשתמש במילה ASYNC!
6. כתבו פונקציה המקבלת נתיב לשני קבצים, קוראת את שניהם ומשרשרת את התוכן של הראשון לתוכן של השני. הפונקציה תחזיר את התוכן המשורשר.
 * נקודה חשובה: הפונקציה תקרא את שני הקבצים בו זמנית ותחזיר את הערך הסופי רק לאחר ששתי הקריאות הסתיימו! (חקירה באינטרנט)



7. תיצרו שרת אקספרס שערוך לקבל בקשות HTTP בפורט 3000. (שימו לב שאין לכתוב בשום מקום בקוד עצמו את המספר פורט. קראתם על הדרך הנכונה לשמור קבועים קונפיגורטיביים)
8. דרישה: כאשר אפנה לשרת בבקשת GET בנתיב הבא: 
read/${filePath} השרת יחזיר לי בתשובה את התוכן של הקובץ
רמז: יש לחקור על איך אנחנו "שואבים" פרמטרים מהURL של הבקשה
9. דרישה: כאשר אפנה לשרת בבקשת GET בנתיב הבא:
read/readMultipleFiles ואשלח בתוכן הבקשה אובייקט המכיל מערך ובתוכו נתיבים שונים, השרת יחזיר לי אובייקט המכיל מערך ובתוכו התכנים של הקבצים.
10. דרישה: כאשר אפנה לשרת בבקשת POST בנתיב הבא: 
write/${filePath} השרת יחזיר לי תשובה המסמנת שהפעולה הסתיימה בהצלחה. שימו לב! אם הקובץ כבר קיים אין לדרוס אותו! יש להחזיר שגיאה מתאימה.

11. הקימו שרת NODE נוסף שירוץ בפורט 3001. אחת מההגדרות הקונפיגורטיביות של השרת תהיה נתיב לתיקייה.
השרת יקרא את כל הקבצים בתיקייה, ויפנה לשרת שרץ בפורט 3000 בבקשת HTTP מהתרגילים הקודמים כך שהשרת ההוא ישמור אותם אצלו.

12. שכלול לתרגיל הקודם: השרת שלנו יסרוק את התיקייה שלו כל 10 שניות וישלח את הקבצים הנמצאים בתיקייה לשרת בפורט 3000.
שימו לב שאין לשלוח כל קובץ מעל פעם אחת! חשבו על דרך יצירתית על איך נימנע מכך. בדקו שאכן סריקת התיקייה אכן מתבצעת כל 10 שניות.

13. אם קובץ לא הצליח להישלח פעם אחת נוסיף לו סיומת המעידה על מספר נסיונות השליחה שעבר. למשל a.txt.1. אם הקובץ נכשל פעמיים הוא יקרא a.txt.2 וכן הלאה.
 בסריקה הבאה ננסה לשלוח אותו שוב. כאשר הוא ישמר בשרת היעד לא יהיה זכר למספר נסיונות השליחה שלו,
 כלומר אם קובץ נשלח בהצלחה בפעם השלישית הוא יישמר בשרת היעד ללא הסיומת המצביעה על מספר הנסיונות שלו.